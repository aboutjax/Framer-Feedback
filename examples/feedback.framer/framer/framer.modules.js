require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"feedback":[function(require,module,exports){
var Feedback,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

Events.Dismiss = "DismissFeedback";

Feedback = (function(superClass) {
  extend(Feedback, superClass);

  function Feedback(options) {
    var counter, dismiss, dismissFeedback, svg, svgProps, textPadding;
    if (options == null) {
      options = {};
    }
    svgProps = {
      color: options.color || 'white'
    };
    svg = "		<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n  <path fill=\"" + svgProps.color + "\" d=\"M13.41525,12.0005 L17.70725,7.7075 C18.09825,7.3175 18.09825,6.6845 17.70725,6.2935 C17.31625,5.9025 16.68425,5.9025 16.29325,6.2935 L12.00125,10.5865 L7.70725,6.2925 C7.31625,5.9025 6.68425,5.9025 6.29325,6.2925 C5.90225,6.6835 5.90225,7.3155 6.29325,7.7065 L10.58725,12.0005 L6.29325,16.2945 C5.90325,16.6845 5.90225,17.3185 6.29325,17.7085 C6.68425,18.0995 7.31725,18.0985 7.70725,17.7085 L12.00125,13.4145 L16.29425,17.7065 C16.68425,18.0975 17.31725,18.0975 17.70825,17.7065 C18.09925,17.3165 18.09825,16.6835 17.70825,16.2935 L13.41525,12.0005 Z\"/>\n</svg>\n\n";
    if (options.autoDismiss) {
      textPadding = {
        top: 16,
        right: 16,
        bottom: 16,
        left: 16
      };
    } else {
      textPadding = {
        top: 16,
        right: 48,
        bottom: 16,
        left: 16
      };
    }
    Feedback.__super__.constructor.call(this, _.defaults(options, {
      fontSize: 16,
      color: 'white',
      text: options.text,
      backgroundColor: '#333',
      borderRadius: 3,
      lineHeight: 1.4,
      x: Align.center,
      y: Align.bottom(-20),
      clip: true,
      padding: textPadding,
      borderColor: 'rgba(0, 0, 0, 0.2)',
      borderWidth: 1
    }));
    this.name = 'feedback';
    this.states.show = {
      opacity: 1,
      y: options.y || Align.bottom(0)
    };
    this.states.hide = {
      opacity: 0,
      y: options.y || Align.bottom(0)
    };
    this.states.animationOptions = {
      time: 0.25
    };
    this.stateSwitch('hide');
    this.states["switch"]('show');
    dismissFeedback = (function(_this) {
      return function() {
        var feedback;
        feedback = Layer.select('feedback');
        feedback.states["switch"]('hide');
        Utils.delay(0.5, function() {
          return feedback.destroy();
        });
        return _this.emit(Events.Dismiss);
      };
    })(this);
    if (options.autoDismiss) {
      counter = new Layer({
        parent: this,
        borderRadius: 10,
        y: Align.top(0),
        height: options.autoDismiss.counterHeight || 3,
        backgroundColor: options.autoDismiss.color || 'white',
        width: this.width
      });
      counter.animate({
        width: 0,
        options: {
          time: options.autoDismiss.duration || 3,
          curve: 'linear'
        }
      });
      counter.onAnimationEnd(function() {
        return dismissFeedback();
      });
    } else {
      dismiss = new Layer({
        parent: this,
        backgroundColor: null,
        borderRadius: 50,
        y: Align.top(14),
        x: Align.right(-12),
        html: svg,
        width: 24,
        height: 24,
        opacity: 0.5,
        style: {
          'cursor': 'pointer'
        }
      });
      dismiss.onMouseOver(function() {
        return this.opacity = 1;
      });
      dismiss.onMouseOut(function() {
        return this.opacity = 0.5;
      });
      dismiss.onClick(function() {
        return dismissFeedback();
      });
    }
  }

  Feedback.prototype.onDismiss = function(cb) {
    return this.on(Events.Dismiss, cb);
  };

  return Feedback;

})(TextLayer);

module.exports = Feedback;


},{}]},{},[])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
